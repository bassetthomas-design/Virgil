<Window x:Class="Virgil.App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Virgil" Height="720" Width="1200"
        Background="#0E1014"
        WindowStartupLocation="CenterScreen"
        FontFamily="Segoe UI"
        SnapsToDevicePixels="True">
    <Window.Resources>

        <!-- Couleurs/moods -->
        <SolidColorBrush x:Key="MoodNeutral"  Color="#22FFFFFF"/>
        <SolidColorBrush x:Key="MoodProud"    Color="#2246FF7A"/>
        <SolidColorBrush x:Key="MoodVigilant" Color="#22FFE46B"/>
        <SolidColorBrush x:Key="MoodAlert"    Color="#22FF6961"/>

        <!-- DataTemplate d’un message de Virgil -->
        <DataTemplate x:Key="ChatTemplate" DataType="{x:Type local:ChatMessage}">
            <Border x:Name="Bubble"
                    CornerRadius="14"
                    Padding="12"
                    Margin="8,6"
                    Background="{Binding BubbleBrush}"
                    Effect="{StaticResource BubbleShadow}">
                <StackPanel>
                    <TextBlock Text="{Binding Text}"
                               TextWrapping="Wrap"
                               Foreground="#E8FDF9"
                               FontSize="15"
                               Opacity="0.96"/>
                    <TextBlock Text="{Binding Timestamp, StringFormat={}{0:T}}"
                               Foreground="#99FFFFFF"
                               FontSize="11"
                               HorizontalAlignment="Right"
                               Margin="0,4,0,0"/>
                </StackPanel>
            </Border>
            <DataTemplate.Triggers>
                <!-- Effet Thanos : quand IsExpiring = true, on floute + scale + fade -->
                <DataTrigger Binding="{Binding IsExpiring}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Bubble"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0" Duration="0:0:0.9"
                                                 AccelerationRatio="0.2"/>
                                <DoubleAnimation Storyboard.TargetName="Bubble"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1.15" Duration="0:0:0.9"/>
                                <DoubleAnimation Storyboard.TargetName="Bubble"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1.15" Duration="0:0:0.9"/>
                                <DoubleAnimation Storyboard.TargetName="Bubble"
                                                 Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)"
                                                 To="12" Duration="0:0:0.9"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!-- Ombre + Blur par défaut -->
        <BlurEffect x:Key="DefaultBlur" Radius="0"/>
        <DropShadowEffect x:Key="BubbleShadow" BlurRadius="12" ShadowDepth="0" Color="#3348FFDF"/>

        <!-- Ajoute RenderTransform par défaut sur Border -->
        <Style TargetType="Border">
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Effect">
                <Setter.Value>
                    <BlurEffect Radius="0"/>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="430"/>   <!-- panneau avatar -->
            <ColumnDefinition Width="*"/>     <!-- panneau chat & actions -->
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="58"/>      <!-- barre d’état -->
        </Grid.RowDefinitions>

        <!-- ==== PANNEAU AVATAR + SURVEILLANCE ==== -->
        <Grid Grid.Column="0" Grid.Row="0" Margin="22">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="12"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Avatar holographique (ton contrôle existant) -->
            <local:VirgilAvatar x:Name="AvatarControl" Height="320" />

            <!-- Panneau “Surveillance” : courtes stats Temps/CPU/GPU visible UNIQUEMENT en mode surveillance -->
            <Border Grid.Row="2" CornerRadius="14" Background="#161B22" Padding="12" BorderBrush="#2233FFAA" BorderThickness="1" Visibility="{Binding IsSurveillanceOn, ElementName=Root, Converter={StaticResource BoolToVisibility}}">
                <StackPanel>
                    <TextBlock Text="Surveillance en direct" Foreground="#D7FFF2" FontWeight="SemiBold" Margin="0,0,0,8"/>
                    <UniformGrid Columns="2" Rows="2">
                        <StackPanel>
                            <TextBlock Text="CPU" Foreground="#9FFFE2"/>
                            <ProgressBar Minimum="0" Maximum="100" Height="8" Value="{Binding CpuUsage}" />
                            <TextBlock Text="{Binding CpuTempText}" Foreground="#99FFFFFF" FontSize="11"/>
                        </StackPanel>
                        <StackPanel>
                            <TextBlock Text="GPU" Foreground="#9FFFE2"/>
                            <ProgressBar Minimum="0" Maximum="100" Height="8" Value="{Binding GpuUsage}" />
                            <TextBlock Text="{Binding GpuTempText}" Foreground="#99FFFFFF" FontSize="11"/>
                        </StackPanel>
                        <StackPanel Margin="0,8,0,0">
                            <TextBlock Text="Mémoire" Foreground="#9FFFE2"/>
                            <ProgressBar Minimum="0" Maximum="100" Height="8" Value="{Binding MemUsage}" />
                        </StackPanel>
                        <StackPanel Margin="0,8,0,0">
                            <TextBlock Text="Disque" Foreground="#9FFFE2"/>
                            <ProgressBar Minimum="0" Maximum="100" Height="8" Value="{Binding DiskUsage}" />
                            <TextBlock Text="{Binding DiskTempText}" Foreground="#99FFFFFF" FontSize="11"/>
                        </StackPanel>
                    </UniformGrid>
                </StackPanel>
            </Border>
        </Grid>

        <!-- ==== CHAT DE VIRGIL (messages uniquement, auto-disparition) ==== -->
        <Grid Grid.Column="1" Grid.Row="0" Margin="10,16,16,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Liste de bulles -->
            <ListBox x:Name="ChatList"
                     Grid.Row="0"
                     Background="Transparent"
                     BorderThickness="0"
                     ItemsSource="{Binding ChatMessages}"
                     ItemTemplate="{StaticResource ChatTemplate}"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"/>

            <!-- Bouton: bascule Surveillance -->
            <ToggleButton x:Name="SurveillanceToggle"
                          Grid.Row="1"
                          Content="{Binding SurveillanceButtonText}"
                          IsChecked="{Binding IsSurveillanceOn}"
                          Padding="14,10"
                          Margin="0,10,0,0"
                          Background="#1C2A2F" Foreground="#D7FFF2" BorderBrush="#3355FFBB" BorderThickness="1"
                          Cursor="Hand"/>

            <!-- Actions -->
            <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Left" >
                <Button Content="Maintenance rapide"
                        Click="QuickMaintenanceButton_Click"
                        Margin="0,0,10,0" Padding="14,10"/>
                <Button Content="Maintenance complète"
                        Click="FullMaintenanceButton_Click"
                        Margin="0,0,10,0" Padding="14,10"/>
                <Button Content="Nettoyage TEMP"
                        Click="CleanButton_Click"
                        Margin="0,0,10,0" Padding="14,10"/>
                <Button Content="Caches navigateurs"
                        Click="CleanBrowsersButton_Click"
                        Margin="0,0,10,0" Padding="14,10"/>
                <Button Content="Mises à jour (apps+jeux+Windows+pilotes)"
                        Click="UpdateAllButton_Click"
                        Padding="14,10"/>
            </StackPanel>
        </Grid>

        <!-- ==== BARRE D’ÉTAT ==== -->
        <Grid Grid.ColumnSpan="2" Grid.Row="1" Margin="16,4,16,16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="220"/>
            </Grid.ColumnDefinitions>
            <ProgressBar x:Name="TaskProgress" Height="8" Minimum="0" Maximum="100" Grid.ColumnSpan="2" VerticalAlignment="Center"/>
            <TextBlock x:Name="StatusText" Grid.Column="0" Text="Prêt." Margin="0,10,0,0" Foreground="#CFFFEF"/>
            <TextBlock x:Name="ClockText" Grid.Column="1" TextAlignment="Right" Margin="0,10,0,0" Foreground="#9FFFE2"/>
        </Grid>
    </Grid>
</Window>
